{"version":3,"sources":["../../src/core/Utils.js"],"names":["flatten","arr","concat","apply","isTouchDevice","window","navigator","maxTouchPoints","truncateString","str","length","substr","secondsToTime","rawSeconds","hours","Math","floor","minutes","seconds","groupBy","array","groupingFn","reduce","result","item","key","xs","get","push","set","Map","every","predicateFn","toArray","list","Array","prototype","slice","call","generateFileID","fileName","fileID","toLowerCase","replace","Date","now","extend","objs","Object","assign","getFileType","file","type","split","mimeToExtensions","getFileTypeExtension","mimeType","getFileNameAndExtension","fullFileName","re","fileExt","exec","supportsMediaRecorder","MediaRecorder","start","dataURItoBlob","dataURI","opts","toFile","data","binary","atob","i","charCodeAt","File","Uint8Array","name","Blob","dataURItoFile","copyToClipboard","textToCopy","fallbackString","resolve","reject","textArea","document","createElement","setAttribute","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","select","magicCopyFailed","err","removeChild","prompt","successful","execCommand","getSpeed","fileProgress","bytesUploaded","timeElapsed","uploadStarted","uploadSpeed","getETA","bytesRemaining","bytesTotal","secondsRemaining","round","prettyETA","time","hoursStr","minutesVal","minutesStr","secondsVal","secondsStr","isDOMElement","obj","nodeType","Node","ELEMENT_NODE","findDOMElement","element","querySelector","module","exports"],"mappings":"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","file":"Utils.js","sourcesContent":["// import mime from 'mime-types'\n// import pica from 'pica'\n\n/**\n * A collection of small utility functions that help with dom manipulation, adding listeners,\n * promises and other good things.\n *\n * @module Utils\n */\n\n/**\n * Shallow flatten nested arrays.\n */\nfunction flatten (arr) {\n  return [].concat.apply([], arr)\n}\n\nfunction isTouchDevice () {\n  return 'ontouchstart' in window || // works on most browsers\n          navigator.maxTouchPoints   // works on IE10/11 and Surface\n}\n\n// /**\n//  * Shorter and fast way to select a single node in the DOM\n//  * @param   { String } selector - unique dom selector\n//  * @param   { Object } ctx - DOM node where the target of our search will is located\n//  * @returns { Object } dom node found\n//  */\n// function $ (selector, ctx) {\n//   return (ctx || document).querySelector(selector)\n// }\n\n// /**\n//  * Shorter and fast way to select multiple nodes in the DOM\n//  * @param   { String|Array } selector - DOM selector or nodes list\n//  * @param   { Object } ctx - DOM node where the targets of our search will is located\n//  * @returns { Object } dom nodes found\n//  */\n// function $$ (selector, ctx) {\n//   var els\n//   if (typeof selector === 'string') {\n//     els = (ctx || document).querySelectorAll(selector)\n//   } else {\n//     els = selector\n//     return Array.prototype.slice.call(els)\n//   }\n// }\n\nfunction truncateString (str, length) {\n  if (str.length > length) {\n    return str.substr(0, length / 2) + '...' + str.substr(str.length - length / 4, str.length)\n  }\n  return str\n\n  // more precise version if needed\n  // http://stackoverflow.com/a/831583\n}\n\nfunction secondsToTime (rawSeconds) {\n  const hours = Math.floor(rawSeconds / 3600) % 24\n  const minutes = Math.floor(rawSeconds / 60) % 60\n  const seconds = Math.floor(rawSeconds % 60)\n\n  return { hours, minutes, seconds }\n}\n\n/**\n * Partition array by a grouping function.\n * @param  {[type]} array      Input array\n * @param  {[type]} groupingFn Grouping function\n * @return {[type]}            Array of arrays\n */\nfunction groupBy (array, groupingFn) {\n  return array.reduce((result, item) => {\n    let key = groupingFn(item)\n    let xs = result.get(key) || []\n    xs.push(item)\n    result.set(key, xs)\n    return result\n  }, new Map())\n}\n\n/**\n * Tests if every array element passes predicate\n * @param  {Array}  array       Input array\n * @param  {Object} predicateFn Predicate\n * @return {bool}               Every element pass\n */\nfunction every (array, predicateFn) {\n  return array.reduce((result, item) => {\n    if (!result) {\n      return false\n    }\n\n    return predicateFn(item)\n  }, true)\n}\n\n/**\n * Converts list into array\n*/\nfunction toArray (list) {\n  return Array.prototype.slice.call(list || [], 0)\n}\n\n/**\n * Takes a fileName and turns it into fileID, by converting to lowercase,\n * removing extra characters and adding unix timestamp\n *\n * @param {String} fileName\n *\n */\nfunction generateFileID (fileName) {\n  let fileID = fileName.toLowerCase()\n  fileID = fileID.replace(/[^A-Z0-9]/ig, '')\n  fileID = fileID + Date.now()\n  return fileID\n}\n\nfunction extend (...objs) {\n  return Object.assign.apply(this, [{}].concat(objs))\n}\n\n/**\n * Takes function or class, returns its name.\n * Because IE doesn’t support `constructor.name`.\n * https://gist.github.com/dfkaye/6384439, http://stackoverflow.com/a/15714445\n *\n * @param {Object} fn — function\n *\n */\n// function getFnName (fn) {\n//   var f = typeof fn === 'function'\n//   var s = f && ((fn.name && ['', fn.name]) || fn.toString().match(/function ([^\\(]+)/))\n//   return (!f && 'not a function') || (s && s[1] || 'anonymous')\n// }\n\nfunction getFileType (file) {\n  return file.type ? file.type.split('/') : ['', '']\n  // return mime.lookup(file.name)\n}\n\n// TODO Check which types are actually supported in browsers. Chrome likes webm\n// from my testing, but we may need more.\n// We could use a library but they tend to contain dozens of KBs of mappings,\n// most of which will go unused, so not sure if that's worth it.\nconst mimeToExtensions = {\n  'video/ogg': 'ogv',\n  'audio/ogg': 'ogg',\n  'video/webm': 'webm',\n  'audio/webm': 'webm',\n  'video/mp4': 'mp4',\n  'audio/mp3': 'mp3'\n}\n\nfunction getFileTypeExtension (mimeType) {\n  return mimeToExtensions[mimeType] || null\n}\n\n// returns [fileName, fileExt]\nfunction getFileNameAndExtension (fullFileName) {\n  var re = /(?:\\.([^.]+))?$/\n  var fileExt = re.exec(fullFileName)[1]\n  var fileName = fullFileName.replace('.' + fileExt, '')\n  return [fileName, fileExt]\n}\n\nfunction supportsMediaRecorder () {\n  return typeof MediaRecorder === 'function' && !!MediaRecorder.prototype &&\n    typeof MediaRecorder.prototype.start === 'function'\n}\n\nfunction dataURItoBlob (dataURI, opts, toFile) {\n  // get the base64 data\n  var data = dataURI.split(',')[1]\n\n  // user may provide mime type, if not get it from data URI\n  var mimeType = opts.mimeType || dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n  // default to plain/text if data URI has no mimeType\n  if (mimeType == null) {\n    mimeType = 'plain/text'\n  }\n\n  var binary = atob(data)\n  var array = []\n  for (var i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i))\n  }\n\n  // Convert to a File?\n  if (toFile) {\n    return new File([new Uint8Array(array)], opts.name || '', {type: mimeType})\n  }\n\n  return new Blob([new Uint8Array(array)], {type: mimeType})\n}\n\nfunction dataURItoFile (dataURI, opts) {\n  return dataURItoBlob(dataURI, opts, true)\n}\n\n/**\n * Copies text to clipboard by creating an almost invisible textarea,\n * adding text there, then running execCommand('copy').\n * Falls back to prompt() when the easy way fails (hello, Safari!)\n * From http://stackoverflow.com/a/30810322\n *\n * @param {String} textToCopy\n * @param {String} fallbackString\n * @return {Promise}\n */\nfunction copyToClipboard (textToCopy, fallbackString) {\n  fallbackString = fallbackString || 'Copy the URL below'\n\n  return new Promise((resolve, reject) => {\n    const textArea = document.createElement('textarea')\n    textArea.setAttribute('style', {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '2em',\n      height: '2em',\n      padding: 0,\n      border: 'none',\n      outline: 'none',\n      boxShadow: 'none',\n      background: 'transparent'\n    })\n\n    textArea.value = textToCopy\n    document.body.appendChild(textArea)\n    textArea.select()\n\n    const magicCopyFailed = (err) => {\n      document.body.removeChild(textArea)\n      window.prompt(fallbackString, textToCopy)\n      return reject('Oops, unable to copy displayed fallback prompt: ' + err)\n    }\n\n    try {\n      const successful = document.execCommand('copy')\n      if (!successful) {\n        return magicCopyFailed('copy command unavailable')\n      }\n      document.body.removeChild(textArea)\n      return resolve()\n    } catch (err) {\n      document.body.removeChild(textArea)\n      return magicCopyFailed(err)\n    }\n  })\n}\n\n// function createInlineWorker (workerFunction) {\n//   let code = workerFunction.toString()\n//   code = code.substring(code.indexOf('{') + 1, code.lastIndexOf('}'))\n//\n//   const blob = new Blob([code], {type: 'application/javascript'})\n//   const worker = new Worker(URL.createObjectURL(blob))\n//\n//   return worker\n// }\n\n// function makeWorker (script) {\n//   var URL = window.URL || window.webkitURL\n//   var Blob = window.Blob\n//   var Worker = window.Worker\n//\n//   if (!URL || !Blob || !Worker || !script) {\n//     return null\n//   }\n//\n//   let code = script.toString()\n//   code = code.substring(code.indexOf('{') + 1, code.lastIndexOf('}'))\n//\n//   var blob = new Blob([code])\n//   var worker = new Worker(URL.createObjectURL(blob))\n//   return worker\n// }\n\nfunction getSpeed (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const timeElapsed = (new Date()) - fileProgress.uploadStarted\n  const uploadSpeed = fileProgress.bytesUploaded / (timeElapsed / 1000)\n  return uploadSpeed\n}\n\nfunction getETA (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const uploadSpeed = getSpeed(fileProgress)\n  const bytesRemaining = fileProgress.bytesTotal - fileProgress.bytesUploaded\n  const secondsRemaining = Math.round(bytesRemaining / uploadSpeed * 10) / 10\n\n  return secondsRemaining\n}\n\nfunction prettyETA (seconds) {\n  const time = secondsToTime(seconds)\n\n  // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n  const hoursStr = time.hours ? time.hours + 'h ' : ''\n  const minutesVal = time.hours ? ('0' + time.minutes).substr(-2) : time.minutes\n  const minutesStr = minutesVal ? minutesVal + 'm ' : ''\n  const secondsVal = minutesVal ? ('0' + time.seconds).substr(-2) : time.seconds\n  const secondsStr = secondsVal + 's'\n\n  return `${hoursStr}${minutesStr}${secondsStr}`\n}\n\n// function makeCachingFunction () {\n//   let cachedEl = null\n//   let lastUpdate = Date.now()\n//\n//   return function cacheElement (el, time) {\n//     if (Date.now() - lastUpdate < time) {\n//       return cachedEl\n//     }\n//\n//     cachedEl = el\n//     lastUpdate = Date.now()\n//\n//     return el\n//   }\n// }\n\n/**\n * Check if an object is a DOM element. Duck-typing based on `nodeType`.\n *\n * @param {*} obj\n */\nfunction isDOMElement (obj) {\n  return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE\n}\n\n/**\n * Find a DOM element.\n *\n * @param {Node|string} element\n * @return {Node|null}\n */\nfunction findDOMElement (element) {\n  if (typeof element === 'string') {\n    return document.querySelector(element)\n  }\n\n  if (typeof element === 'object' && isDOMElement(element)) {\n    return element\n  }\n}\n\nmodule.exports = {\n  generateFileID,\n  toArray,\n  every,\n  flatten,\n  groupBy,\n  // $,\n  // $$,\n  extend,\n  supportsMediaRecorder,\n  isTouchDevice,\n  getFileNameAndExtension,\n  truncateString,\n  getFileTypeExtension,\n  getFileType,\n  secondsToTime,\n  dataURItoBlob,\n  dataURItoFile,\n  getSpeed,\n  getETA,\n  // makeWorker,\n  // makeCachingFunction,\n  copyToClipboard,\n  prettyETA,\n  findDOMElement\n}\n"]}