{"version":3,"sources":["../../../src/plugins/Dashboard/Dashboard.js"],"names":["FileList","require","Tabs","FileCard","UploadBtn","StatusBar","isTouchDevice","toArray","closeIcon","module","exports","Dashboard","props","handleInputChange","ev","preventDefault","files","target","forEach","file","addFile","source","id","name","type","data","handlePaste","clipboardData","items","kind","blob","getAsFile","log","updateDashboardElWidth","inline","modal","isHidden","i18n","semiTransparent","isWide","hideModal","maxWidth","maxHeight","acquirers","panelSelectorPrefix","showPanel","fileCardFor","done","fileCardDone","metaFields","showFileCard","showProgressDetails","totalProgress","totalFileCount","info","removeFile","pauseAll","resumeAll","pauseUpload","startUpload","cancelUpload","resumableUploads","autoProceed","newFiles","length","newFileCount","activePanel","hideAllPanels","render","state","totalSize","totalUploadedSize","uploadStartedFiles","isAllComplete","isAllPaused","isUploadStarted","cancelAll","complete","completeFiles","inProgress","totalSpeed","totalETA","progressindicators","map"],"mappings":"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","file":"Dashboard.js","sourcesContent":["const html = require('yo-yo')\nconst FileList = require('./FileList')\nconst Tabs = require('./Tabs')\nconst FileCard = require('./FileCard')\nconst UploadBtn = require('./UploadBtn')\nconst StatusBar = require('./StatusBar')\nconst { isTouchDevice, toArray } = require('../../core/Utils')\nconst { closeIcon } = require('./icons')\n\n// http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog\n\nmodule.exports = function Dashboard (props) {\n  function handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  // @TODO Exprimental, work in progress\n  // no names, weird API, Chrome-only http://stackoverflow.com/a/22940020\n  function handlePaste (ev) {\n    ev.preventDefault()\n\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      props.log('File pasted')\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      })\n    })\n  }\n\n  return html`\n    <div class=\"Uppy UppyTheme--default UppyDashboard\n                          ${isTouchDevice() ? 'Uppy--isTouchDevice' : ''}\n                          ${props.semiTransparent ? 'UppyDashboard--semiTransparent' : ''}\n                          ${!props.inline ? 'UppyDashboard--modal' : ''}\n                          ${props.isWide ? 'UppyDashboard--wide' : ''}\"\n          aria-hidden=\"${props.inline ? 'false' : props.modal.isHidden}\"\n          aria-label=\"${!props.inline\n                       ? props.i18n('dashboardWindowTitle')\n                       : props.i18n('dashboardTitle')}\"\n          role=\"dialog\"\n          onpaste=${handlePaste}\n          onload=${() => props.updateDashboardElWidth()}>\n\n    <button class=\"UppyDashboard-close\"\n            aria-label=\"${props.i18n('closeModal')}\"\n            title=\"${props.i18n('closeModal')}\"\n            onclick=${props.hideModal}>${closeIcon()}</button>\n\n    <div class=\"UppyDashboard-overlay\" onclick=${props.hideModal}></div>\n\n    <div class=\"UppyDashboard-inner\"\n         tabindex=\"0\"\n         style=\"\n          ${props.inline && props.maxWidth ? `max-width: ${props.maxWidth}px;` : ''}\n          ${props.inline && props.maxHeight ? `max-height: ${props.maxHeight}px;` : ''}\n         \">\n      <div class=\"UppyDashboard-innerWrap\">\n\n        ${Tabs({\n          files: props.files,\n          handleInputChange: handleInputChange,\n          acquirers: props.acquirers,\n          panelSelectorPrefix: props.panelSelectorPrefix,\n          showPanel: props.showPanel,\n          i18n: props.i18n\n        })}\n\n        ${FileCard({\n          files: props.files,\n          fileCardFor: props.fileCardFor,\n          done: props.fileCardDone,\n          metaFields: props.metaFields,\n          log: props.log,\n          i18n: props.i18n\n        })}\n\n        <div class=\"UppyDashboard-filesContainer\">\n\n          ${FileList({\n            acquirers: props.acquirers,\n            files: props.files,\n            handleInputChange: handleInputChange,\n            showFileCard: props.showFileCard,\n            showProgressDetails: props.showProgressDetails,\n            totalProgress: props.totalProgress,\n            totalFileCount: props.totalFileCount,\n            info: props.info,\n            i18n: props.i18n,\n            log: props.log,\n            removeFile: props.removeFile,\n            pauseAll: props.pauseAll,\n            resumeAll: props.resumeAll,\n            pauseUpload: props.pauseUpload,\n            startUpload: props.startUpload,\n            cancelUpload: props.cancelUpload,\n            resumableUploads: props.resumableUploads,\n            isWide: props.isWide\n          })}\n\n          <div class=\"UppyDashboard-actions\">\n            ${!props.autoProceed && props.newFiles.length > 0\n              ? UploadBtn({\n                i18n: props.i18n,\n                startUpload: props.startUpload,\n                newFileCount: props.newFiles.length\n              })\n              : null\n            }\n          </div>\n\n        </div>\n\n        <div class=\"UppyDashboardContent-panel\"\n             role=\"tabpanel\"\n             aria-hidden=\"${props.activePanel ? 'false' : 'true'}\">\n          <div class=\"UppyDashboardContent-bar\">\n            <h2 class=\"UppyDashboardContent-title\">\n              ${props.i18n('importFrom')} ${props.activePanel ? props.activePanel.name : null}\n            </h2>\n            <button class=\"UppyDashboardContent-back\"\n                    onclick=${props.hideAllPanels}>${props.i18n('done')}</button>\n          </div>\n          ${props.activePanel ? props.activePanel.render(props.state) : ''}\n        </div>\n\n        <div class=\"UppyDashboard-progressindicators\">\n          ${StatusBar({\n            totalProgress: props.totalProgress,\n            totalFileCount: props.totalFileCount,\n            totalSize: props.totalSize,\n            totalUploadedSize: props.totalUploadedSize,\n            uploadStartedFiles: props.uploadStartedFiles,\n            isAllComplete: props.isAllComplete,\n            isAllPaused: props.isAllPaused,\n            isUploadStarted: props.isUploadStarted,\n            pauseAll: props.pauseAll,\n            resumeAll: props.resumeAll,\n            cancelAll: props.cancelAll,\n            complete: props.completeFiles.length,\n            inProgress: props.inProgress,\n            totalSpeed: props.totalSpeed,\n            totalETA: props.totalETA,\n            startUpload: props.startUpload,\n            newFileCount: props.newFiles.length,\n            i18n: props.i18n,\n            resumableUploads: props.resumableUploads\n          })}\n\n          ${props.progressindicators.map((target) => {\n            return target.render(props.state)\n          })}\n        </div>\n\n      </div>\n    </div>\n  </div>\n  `\n}\n"]}