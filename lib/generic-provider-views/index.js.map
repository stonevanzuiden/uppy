{"version":3,"sources":["../../src/generic-provider-views/index.js"],"names":["AuthView","require","Browser","ErrorView","LoaderView","Utils","module","exports","plugin","Provider","id","addFile","bind","filterItems","filterQuery","getFolder","getNextFolder","handleRowClick","logout","handleAuth","handleDemoAuth","sortByTitle","sortByDate","isActiveRow","handleError","render","updateState","newState","stateId","state","core","setState","name","_loaderWrapper","list","res","folders","files","updatedDirectories","getState","index","directories","findIndex","dir","slice","concat","title","getItemName","getItemSubList","forEach","item","isFolder","push","data","folder","getItemRequestPath","file","tagFile","source","getItemData","type","getMimeType","isRemote","body","fileId","getItemId","remote","host","opts","url","getFileType","preview","console","log","emitter","emit","location","href","then","json","ok","authenticated","catch","activeRow","e","filterInput","target","value","items","filter","toLowerCase","indexOf","sorting","sortedFiles","sort","fileA","fileB","localeCompare","sortedFolders","folderA","folderB","a","Date","getItemModifiedDate","b","urlId","Math","floor","random","redirect","search","authState","btoa","JSON","stringify","link","authProvider","authWindow","window","open","checkAuth","authWindowUrl","DOMException","TypeError","setTimeout","split","close","auth","onAuth","error","promise","catch_","result","loading","err","undefined","pluginName","demo","browserProps","getItemIcon"],"mappings":"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","file":"index.js","sourcesContent":["const AuthView = require('./AuthView')\nconst Browser = require('./Browser')\nconst ErrorView = require('./Error')\nconst LoaderView = require('./Loader')\nconst Utils = require('../core/Utils')\n\n/**\n * Class to easily generate generic views for plugins\n *\n * This class expects the plugin using to have the following attributes\n *\n * stateId {String} object key of which the plugin state is stored\n *\n * This class also expects the plugin instance using it to have the following\n * accessor methods.\n * Each method takes the item whose property is to be accessed\n * as a param\n *\n * isFolder\n *    @return {Boolean} for if the item is a folder or not\n * getItemData\n *    @return {Object} that is format ready for uppy upload/download\n * getItemIcon\n *    @return {Object} html instance of the item's icon\n * getItemSubList\n *    @return {Array} sub-items in the item. e.g a folder may contain sub-items\n * getItemName\n *    @return {String} display friendly name of the item\n * getMimeType\n *    @return {String} mime type of the item\n * getItemId\n *    @return {String} unique id of the item\n * getItemRequestPath\n *    @return {String} unique request path of the item when making calls to uppy server\n * getItemModifiedDate\n *    @return {object} or {String} date of when last the item was modified\n */\nmodule.exports = class View {\n  /**\n   * @param {object} instance of the plugin\n   */\n  constructor (plugin) {\n    this.plugin = plugin\n    this.Provider = plugin[plugin.id]\n\n    // Logic\n    this.addFile = this.addFile.bind(this)\n    this.filterItems = this.filterItems.bind(this)\n    this.filterQuery = this.filterQuery.bind(this)\n    this.getFolder = this.getFolder.bind(this)\n    this.getNextFolder = this.getNextFolder.bind(this)\n    this.handleRowClick = this.handleRowClick.bind(this)\n    this.logout = this.logout.bind(this)\n    this.handleAuth = this.handleAuth.bind(this)\n    this.handleDemoAuth = this.handleDemoAuth.bind(this)\n    this.sortByTitle = this.sortByTitle.bind(this)\n    this.sortByDate = this.sortByDate.bind(this)\n    this.isActiveRow = this.isActiveRow.bind(this)\n    this.handleError = this.handleError.bind(this)\n\n    // Visual\n    this.render = this.render.bind(this)\n  }\n\n  /**\n   * Little shorthand to update the state with the plugin's state\n   */\n  updateState (newState) {\n    let stateId = this.plugin.stateId\n    const {state} = this.plugin.core\n\n    this.plugin.core.setState({[stateId]: Object.assign({}, state[stateId], newState)})\n  }\n\n  /**\n   * Based on folder ID, fetch a new folder and update it to state\n   * @param  {String} id Folder id\n   * @return {Promise}   Folders/files in folder\n   */\n  getFolder (id, name) {\n    return this._loaderWrapper(\n      this.Provider.list(id),\n      (res) => {\n        let folders = []\n        let files = []\n        let updatedDirectories\n\n        const state = this.plugin.core.getState()[this.plugin.stateId]\n        const index = state.directories.findIndex((dir) => id === dir.id)\n\n        if (index !== -1) {\n          updatedDirectories = state.directories.slice(0, index + 1)\n        } else {\n          updatedDirectories = state.directories.concat([{id, title: name || this.plugin.getItemName(res)}])\n        }\n\n        this.plugin.getItemSubList(res).forEach((item) => {\n          if (this.plugin.isFolder(item)) {\n            folders.push(item)\n          } else {\n            files.push(item)\n          }\n        })\n\n        let data = {folders, files, directories: updatedDirectories}\n        this.updateState(data)\n\n        return data\n      },\n      this.handleError)\n  }\n\n  /**\n   * Fetches new folder\n   * @param  {Object} Folder\n   * @param  {String} title Folder title\n   */\n  getNextFolder (folder) {\n    let id = this.plugin.getItemRequestPath(folder)\n    this.getFolder(id, this.plugin.getItemName(folder))\n  }\n\n  addFile (file) {\n    const tagFile = {\n      source: this.plugin.id,\n      data: this.plugin.getItemData(file),\n      name: this.plugin.getItemName(file),\n      type: this.plugin.getMimeType(file),\n      isRemote: true,\n      body: {\n        fileId: this.plugin.getItemId(file)\n      },\n      remote: {\n        host: this.plugin.opts.host,\n        url: `${this.plugin.opts.host}/${this.Provider.id}/get/${this.plugin.getItemRequestPath(file)}`,\n        body: {\n          fileId: this.plugin.getItemId(file)\n        }\n      }\n    }\n\n    if (Utils.getFileType(tagFile)[0] === 'image') {\n      tagFile.preview = `${this.plugin.opts.host}/${this.Provider.id}/thumbnail/${this.plugin.getItemRequestPath(file)}`\n    }\n    console.log('adding file')\n    this.plugin.core.emitter.emit('core:file-add', tagFile)\n  }\n\n  /**\n   * Removes session token on client side.\n   */\n  logout () {\n    this.Provider.logout(location.href)\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.ok) {\n          const newState = {\n            authenticated: false,\n            files: [],\n            folders: [],\n            directories: []\n          }\n          this.updateState(newState)\n        }\n      }).catch(this.handleError)\n  }\n\n  /**\n   * Used to set active file/folder.\n   * @param  {Object} file   Active file/folder\n   */\n  handleRowClick (file) {\n    const state = this.plugin.core.getState()[this.plugin.stateId]\n    const newState = Object.assign({}, state, {\n      activeRow: this.plugin.getItemId(file)\n    })\n\n    this.updateState(newState)\n  }\n\n  filterQuery (e) {\n    const state = this.plugin.core.getState()[this.plugin.stateId]\n    this.updateState(Object.assign({}, state, {\n      filterInput: e.target.value\n    }))\n  }\n\n  filterItems (items) {\n    const state = this.plugin.core.getState()[this.plugin.stateId]\n    return items.filter((folder) => {\n      return this.plugin.getItemName(folder).toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  sortByTitle () {\n    const state = Object.assign({}, this.plugin.core.getState()[this.plugin.stateId])\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(fileB).localeCompare(this.plugin.getItemName(fileA))\n      }\n      return this.plugin.getItemName(fileA).localeCompare(this.plugin.getItemName(fileB))\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(folderB).localeCompare(this.plugin.getItemName(folderA))\n      }\n      return this.plugin.getItemName(folderA).localeCompare(this.plugin.getItemName(folderB))\n    })\n\n    this.updateState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'titleDescending') ? 'titleAscending' : 'titleDescending'\n    }))\n  }\n\n  sortByDate () {\n    const state = Object.assign({}, this.plugin.core.getState()[this.plugin.stateId])\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(fileA))\n      let b = new Date(this.plugin.getItemModifiedDate(fileB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(folderA))\n      let b = new Date(this.plugin.getItemModifiedDate(folderB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    this.updateState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'dateDescending') ? 'dateAscending' : 'dateDescending'\n    }))\n  }\n\n  isActiveRow (file) {\n    return this.plugin.core.getState()[this.plugin.stateId].activeRow === this.plugin.getItemId(file)\n  }\n\n  handleDemoAuth () {\n    const state = this.plugin.core.getState()[this.plugin.stateId]\n    this.updateState({}, state, {\n      authenticated: true\n    })\n  }\n\n  handleAuth () {\n    const urlId = Math.floor(Math.random() * 999999) + 1\n    const redirect = `${location.href}${location.search ? '&' : '?'}id=${urlId}`\n\n    const authState = btoa(JSON.stringify({ redirect }))\n    const link = `${this.plugin.opts.host}/connect/${this.Provider.authProvider}?state=${authState}`\n\n    const authWindow = window.open(link, '_blank')\n    const checkAuth = () => {\n      let authWindowUrl\n\n      try {\n        authWindowUrl = authWindow.location.href\n      } catch (e) {\n        if (e instanceof DOMException || e instanceof TypeError) {\n          return setTimeout(checkAuth, 100)\n        } else throw e\n      }\n\n      // split url because chrome adds '#' to redirects\n      if (authWindowUrl.split('#')[0] === redirect) {\n        authWindow.close()\n        this._loaderWrapper(this.Provider.auth(), this.plugin.onAuth, this.handleError)\n      } else {\n        setTimeout(checkAuth, 100)\n      }\n    }\n\n    checkAuth()\n  }\n\n  handleError (error) {\n    this.updateState({ error })\n  }\n\n  // displays loader view while asynchronous request is being made.\n  _loaderWrapper (promise, then, catch_) {\n    promise\n      .then((result) => {\n        this.updateState({ loading: false })\n        then(result)\n      })\n      .catch((err) => {\n        this.updateState({ loading: false })\n        catch_(err)\n      })\n    this.updateState({ loading: true })\n  }\n\n  render (state) {\n    const { authenticated, error, loading } = state[this.plugin.stateId]\n\n    if (error) {\n      this.updateState({ error: undefined })\n      return ErrorView({ error: error })\n    }\n\n    if (loading) {\n      return LoaderView()\n    }\n\n    if (!authenticated) {\n      return AuthView({\n        pluginName: this.plugin.title,\n        demo: this.plugin.opts.demo,\n        handleAuth: this.handleAuth,\n        handleDemoAuth: this.handleDemoAuth\n      })\n    }\n\n    const browserProps = Object.assign({}, state[this.plugin.stateId], {\n      getNextFolder: this.getNextFolder,\n      getFolder: this.getFolder,\n      addFile: this.addFile,\n      filterItems: this.filterItems,\n      filterQuery: this.filterQuery,\n      handleRowClick: this.handleRowClick,\n      sortByTitle: this.sortByTitle,\n      sortByDate: this.sortByDate,\n      logout: this.logout,\n      demo: this.plugin.opts.demo,\n      isActiveRow: this.isActiveRow,\n      getItemName: this.plugin.getItemName,\n      getItemIcon: this.plugin.getItemIcon\n    })\n\n    return Browser(browserProps)\n  }\n}\n"]}