{"version":3,"sources":["../../../../src/uppy-base/src/plugins/Provider.js"],"names":["require","_getName","id","split","map","s","charAt","toUpperCase","slice","join","module","exports","opts","provider","authProvider","name","fetch","host","method","credentials","headers","then","res","json","payload","authenticated","directory","redirect","location","href"],"mappings":"AAAA;;;;;;AAEAA,QAAQ,cAAR;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAACC,EAAD,EAAQ;AACvB,SAAOA,GAAGC,KAAH,CAAS,GAAT,EAAcC,GAAd,CAAkB,UAACC,CAAD;AAAA,WAAOA,EAAEC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,EAAEG,KAAF,CAAQ,CAAR,CAAnC;AAAA,GAAlB,EAAiEC,IAAjE,CAAsE,GAAtE,CAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP;AACE,oBAAaC,IAAb,EAAmB;AAAA;;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBD,KAAKC,QAArB;AACA,SAAKX,EAAL,GAAU,KAAKW,QAAf;AACA,SAAKC,YAAL,GAAoBF,KAAKE,YAAL,IAAqB,KAAKD,QAA9C;AACA,SAAKE,IAAL,GAAY,KAAKH,IAAL,CAAUG,IAAV,IAAkBd,SAAS,KAAKC,EAAd,CAA9B;AACD;;AAPH;AAAA;AAAA,2BASU;AACN,aAAOc,MAAS,KAAKJ,IAAL,CAAUK,IAAnB,SAA2B,KAAKf,EAAhC,YAA2C;AAChDgB,gBAAQ,KADwC;AAEhDC,qBAAa,SAFmC;AAGhDC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAHuC,OAA3C,EAQNC,IARM,CAQD,UAACC,GAAD,EAAS;AACb,eAAOA,IAAIC,IAAJ,GACNF,IADM,CACD,UAACG,OAAD,EAAa;AACjB,iBAAOA,QAAQC,aAAf;AACD,SAHM,CAAP;AAID,OAbM,CAAP;AAcD;AAxBH;AAAA;AAAA,yBA0BQC,SA1BR,EA0BmB;AACf,aAAOV,MAAS,KAAKJ,IAAL,CAAUK,IAAnB,SAA2B,KAAKf,EAAhC,eAA2CwB,aAAa,EAAxD,GAA8D;AACnER,gBAAQ,KAD2D;AAEnEC,qBAAa,SAFsD;AAGnEC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAH0D,OAA9D,EAQNC,IARM,CAQD,UAACC,GAAD;AAAA,eAASA,IAAIC,IAAJ,EAAT;AAAA,OARC,CAAP;AASD;AApCH;AAAA;AAAA,6BAsCoC;AAAA,UAA1BI,QAA0B,uEAAfC,SAASC,IAAM;;AAChC,aAAOb,MAAS,KAAKJ,IAAL,CAAUK,IAAnB,SAA2B,KAAKf,EAAhC,yBAAsDyB,QAAtD,EAAkE;AACvET,gBAAQ,KAD+D;AAEvEC,qBAAa,SAF0D;AAGvEC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAH8D,OAAlE,CAAP;AAQD;AA/CH;;AAAA;AAAA","file":"Provider.js","sourcesContent":["'use strict'\n\nrequire('whatwg-fetch')\n\nconst _getName = (id) => {\n  return id.split('-').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' ')\n}\n\nmodule.exports = class Provider {\n  constructor (opts) {\n    this.opts = opts\n    this.provider = opts.provider\n    this.id = this.provider\n    this.authProvider = opts.authProvider || this.provider\n    this.name = this.opts.name || _getName(this.id)\n  }\n\n  auth () {\n    return fetch(`${this.opts.host}/${this.id}/auth`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application.json'\n      }\n    })\n    .then((res) => {\n      return res.json()\n      .then((payload) => {\n        return payload.authenticated\n      })\n    })\n  }\n\n  list (directory) {\n    return fetch(`${this.opts.host}/${this.id}/list/${directory || ''}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n  }\n\n  logout (redirect = location.href) {\n    return fetch(`${this.opts.host}/${this.id}/logout?redirect=${redirect}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n"]}